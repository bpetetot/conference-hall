version: 2
jobs:
  lint:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn lint

  test:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test

  build:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build and check bundle size
          command:  |
            yarn build
            yarn size

  deploy-dev:
    docker:
      - image: circleci/node:8
    steps:
      - run:
          name: Set environment variables
          command: |
            echo 'export REACT_APP_AUTH_PROVIDERS="google,twitter,github,facebook"' >> $BASH_ENV
            echo 'export REACT_APP_API_KEY="$DEV_FIREBASE_API_KEY"' >> $BASH_ENV
            echo 'export REACT_APP_AUTH_DOMAIN="$DEV_FIREBASE_AUTH_DOMAIN"' >> $BASH_ENV
            echo 'export REACT_APP_PROJECT_ID="$DEV_FIREBASE_PROJECT_ID"' >> $BASH_ENV
            echo 'export REACT_APP_GOOGLE_ANALYTICS_ID=""' >> $BASH_ENV
            echo 'export PUBLIC_URL="https://$DEV_FIREBASE_AUTH_DOMAIN"' >> $BASH_ENV
            echo 'export FIREBASE_DEPLOY_TOKEN="$DEV_FIREBASE_DEPLOY_TOKEN"' >> $BASH_ENV
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install node dependencies
          command: |
            yarn
            cd functions
            yarn
      - save_cache:
          paths:
            - node_modules
            - functions/node_modules
            - ~/.cache/yarn
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build the app
          command: yarn build
      - run:
          name: Deploy to Firebase
          command: ./node_modules/.bin/firebase deploy --project=$DEV_FIREBASE_PROJECT_ID --token=$FIREBASE_DEPLOY_TOKEN --non-interactive

  deploy-prod:
    docker:
      - image: circleci/node:8
    steps:
      - run:
          name: Set environment variables
          command: |
            echo 'export REACT_APP_AUTH_PROVIDERS="google,twitter,github"' >> $BASH_ENV
            echo 'export REACT_APP_API_KEY="$PROD_FIREBASE_API_KEY"' >> $BASH_ENV
            echo 'export REACT_APP_AUTH_DOMAIN="$PROD_FIREBASE_AUTH_DOMAIN"' >> $BASH_ENV
            echo 'export REACT_APP_PROJECT_ID="$PROD_FIREBASE_PROJECT_ID"' >> $BASH_ENV
            echo 'export REACT_APP_GOOGLE_ANALYTICS_ID="$PROD_GOOGLE_ANALYTICS_ID"' >> $BASH_ENV
            echo 'export PUBLIC_URL="https://$PROD_FIREBASE_AUTH_DOMAIN"' >> $BASH_ENV
            echo 'export FIREBASE_DEPLOY_TOKEN="$PROD_FIREBASE_DEPLOY_TOKEN"' >> $BASH_ENV
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install node dependencies
          command: |
            yarn
            cd functions
            yarn
      - save_cache:
          paths:
            - node_modules
            - functions/node_modules
            - ~/.cache/yarn
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build app
          command: yarn build
      - run:
          name: Deploy to Firebase
          command: ./node_modules/.bin/firebase deploy --project=$PROD_FIREBASE_PROJECT_ID --token=$FIREBASE_DEPLOY_TOKEN --non-interactive

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - lint
      - test
      - build
      - deploy-dev:
          requires:
            - lint
            - test
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - lint
            - test
          filters:
            branches:
              only: production

